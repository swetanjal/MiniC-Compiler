; ModuleID = 'MiniC compiler'
source_filename = "MiniC compiler"

define i32 @fact(i32 %m) {
entry:
  %m1 = alloca i32
  store i32 %m, i32* %m1
  %0 = load i32, i32* %m1
  %equalcompare = icmp eq i32 %0, 0
  br i1 %equalcompare, label %if, label %ifcont

if:                                               ; preds = %entry
  br label %return

return:                                           ; preds = %if
  ret i32 1

after_return:                                     ; No predecessors!
  br label %ifcont

ifcont:                                           ; preds = %after_return, %entry
  br label %return2

return2:                                          ; preds = %ifcont
  %1 = load i32, i32* %m1
  %2 = load i32, i32* %m1
  %sub = sub i32 %2, 1
  %3 = call i32 @fact(i32 %sub)
  %mult = mul i32 %1, %3
  ret i32 %mult
}

define i32 @main() {
entry:
  %0 = call i32 @fact(i32 5)
  br label %return

return:                                           ; preds = %entry
  ret i32 0
}
