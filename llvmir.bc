; ModuleID = 'MiniC compiler'
source_filename = "MiniC compiler"

define i32 @sum(i32 %a, i32 %b) {
entry:
  %b2 = alloca i32
  %a1 = alloca i32
  store i32 %a, i32* %a1
  store i32 %b, i32* %b2
  %0 = load i32, i32* %a1
  %1 = load i32, i32* %b2
  %add = add i32 %0, %1
  ret i32 %add
}

define i32 @main() {
entry:
  %c = alloca i32
  %b = alloca i32
  %a = alloca i32
  store i32 3, i32* %a
  %0 = load i32, i32* %a
  %for_cond = icmp ne i32 %0, 0
  br i1 %for_cond, label %loop, label %after

loop:                                             ; preds = %loop, %entry
  %1 = load i32, i32* %a
  call void @printlnint(i32 %1)
  %2 = load i32, i32* %a
  %sub = sub i32 %2, 1
  store i32 %sub, i32* %a
  %3 = load i32, i32* %a
  %for_cond1 = icmp ne i32 %3, 0
  br i1 %for_cond1, label %loop, label %after

after:                                            ; preds = %loop, %entry
  ret i32 0
}

declare void @printlnint(i32)
